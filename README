Running the web client

	From the terminal go to the git rep folder.
	Change directory to MPEGDashPlayer.
	To deploy locally type "meteor".

Building and Running the docker image

	Right now we are hosting locally, so you need to modify the dockerfile to add your media file

	sudo docker build -t mpegDashServer .
	sudo docker run -p -it 80:8000 mpegdash

	There is a script at the end of the Dockerfile that will convert the video file and then host it for the player to run.  


Converting and Hosting a local media file with DASHCAST

	DashCast -av SampleVideo_720x480_50mb.mp4 -seg-dur 1000 -frag-dur 200
	nodejs gpac-dash.js -segment-marker eods -chunk-media-segments


	res.setHeader('Access-Control-Allow-Origin', '*');
	res.setHeader('Access-Control-Allow-Credentials', true);


Converting and Hosting a live stream with DASHCAST
 DashCast -vf video4linux2 -v4l2f mjpeg -vfr 30 -vres 1280x720 -v http://192.168.1.7:1720 -live



STEPS to repeat where I was:

	Starting up the docker file.
	sudo docker run -p -it 80:8000 mpegdash
	
	Installing packages need to host.
	git clone https://github.com/gpac/node-gpac-dash.git
	apt-get -y install nodejs

	Add these two lines in the node-gpac-dash directory in the gpac-dash.js file
	look for a if statement towards the bottom that "== 'mpd'" (NOTE DO THIS FOR ALL OUTGOING MESSAGES like .m4s)
	res.setHeader('Access-Control-Allow-Origin', '*');
	res.setHeader('Access-Control-Allow-Credentials', true);

	transcodes the file
	DashCast -av SampleVideo_720x480_50mb.mp4 -seg-dur 1000 -frag-dur 200 -mpd-refresh 1
	(NOTE had problem with audio encoding. changed to -v and it will work but needs fix later).
	DashCast -v SampleVideo_720x480_50mb.mp4 -seg-dur 1000 -frag-dur 200 -mpd-refresh 1

	Need to be in the node gpac dash directory
	nodejs gpac-dash.js -segment-marker eods -chunk-media-segments
	
	error working on chrome. will work on internet explorer though.


DashCast -v SampleVideo_720x480_50mb.mp4 -seg-dur 1000 -frag-dur 200 -mpd-refresh 1 -seg-marker eods -ast-offset -800 -min-buffer 0.2 -pixf yuv420p -insert-utc
nodejs gpac-dash.js -segment-marker eods -chunk-media-segments -ip 172.17.0.33 -port 8008


I ALSO CHANGED MPD-REFRESH TO 5MIN in the MPD manually. This should be fixed by changing the duration of video to what the duration actually is.


mp4 is able to be encoded and transferred live. Docker image currently too slow to do both at same time.

FOR LIVE MP4 STREAMING:
DashCast -v SampleVideo_720x480_50mb.mp4 -seg-dur 1000 -frag-dur 200 -mpd-refresh 10000 -time-shift -1 -seg-marker eods -min-buffer 0.2 -pixf yuv420p -insert-utc -low-delay -no-loop

-time-shift to -1 means that save old segments
-mpd-refresh to 10000 really just means never reset mpd-refresh cause it will always be the same.
-no-loop means don't repeat the video after fully encoded

FOR LIVE VLC STREAMING: (TODO)
DashCast -v "http://137.112.249.2:8080/" -seg-dur 2000 -frag-dur 400 -mpd-refresh 2 -ast-offset -800 -time-shift -1 -seg-marker eods -pixf yuv420p -insert-utc -live

Big problem with the processing power of our vm. I changed the dashcast.conf to:
type=video
bitrate=200000
framerate=25
width=320
height=240

From :
type=video
bitrate=1000000
framerate=25
width=640
height=480

And it STILL ran into problems. No errors are thrown and the video is being transferred over.
But lots of pauses and video still looks bad.
